@model FundsManager.ViewModels.ApplyListModel

@{
    ViewBag.Title = FundsManager.Controllers.SiteInfo.getSiteName() + "修改申请单";
    List<FundsManager.Models.SelectOption> users = (List<FundsManager.Models.SelectOption>)ViewData["ViewUsers"];
}
<style>
    .out-form{width:100%;
                  background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    padding:15px 10px 0px 0px;
    margin-top:15px;
    }
    .funds-all{
        width:auto;
        min-width:250px;
        display:inline-block;
        height:36px;
    }
    .div-user{margin-top:15px;}
    .ul-users li{list-style:none;}
    #msg{display:none;}
    .btn-div{margin-top:5px;}
</style>
<h4>经费申请</h4>
    <div class="col-md-10" id="msg">
        @ViewBag.msg
    </div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.userId, new { Value = User.Identity.Name })
        @Html.HiddenFor(model => model.number, new { Value = Model.number,id="hidNumber" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control funds-all", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
@if (Model.state != 1)
{
                <input type="button" onclick="addChild();" class="btn btn-info" value="添加经费" />
}
            </div>
        </div>
        
        @foreach (var item in Model.child)
        {
            
            <div class="out-form">
                @Html.HiddenFor(citem => item.Cnumber)
                <div class="form-group">
                    @Html.LabelFor(model => item.Fid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => item.Fid,item.Fid, ViewBag.Funds as List<SelectListItem>,"", new Dictionary<string, object> { { "class", "select form-control f-sel" }, { "onchange", "FundsChange(this);" } })
                        @Html.ValidationMessageFor(model => item.Fid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => item.amount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.amount, new { htmlAttributes = new { @class = "form-control txt-funds",@type="number", onblur= "ResetAmount();" } })
                        @Html.ValidationMessageFor(model => item.amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.applyFor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => item.applyFor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => item.applyFor, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (Model.state == 1)
                {
                <div class="form-group">
                    @Html.LabelFor(model => item.factGet, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.factGet, new { htmlAttributes = new { @class = "form-control txt-funds", @type = "number" } })
                        @Html.ValidationMessageFor(model => item.factGet, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => item.getInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => item.getInfo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => item.getInfo, "", new { @class = "text-danger" })
                    </div>
                </div>
                }
                else
                {
                    <div class="form-group">
                        <label class="control-label col-md-2"></label>
                        <div class="col-md-10">
                           <input type="button" class="btn btn-danger" value="删除" onclick="DeleteThis(this)"  />
                        </div>
                    </div>
                }
            </div>
        }
        @if (Model.state != 1) { 
        <div class="form-group div-user">
            <label class="control-label col-md-2" for="amount">选择下一步批复</label>
            <div class="col-md-10">
                <ul class="ul-users">
                    @if (users != null && users.Count() > 0)
                    {
                        string strchecked= "";
                        foreach (var item in users)
                        {
                            string id = "cbk" + @item.id;
                            if (item.id == Model.next.ToString()) strchecked = "checked";
                            else strchecked = "";
                            <li>
                                <input type="radio" class="cbkuser" name="cbkUsers" id="@id" value="@item.id" @strchecked/><label for="@id">@item.text</label>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
        }else
        {
            <input type="hidden" id="hidNoNext" value="1" />
        }
        <div class="form-group btn-div">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" id="fat-btn" onclick="Add(this);" data-loading-text="加载中..." class="btn btn-primary" autocomplete="off">
                    提 交
                </button>
                @Html.ActionLink("返 回", "Index", null, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>
}
<script src="~/scripts/jquery-3.2.1.slim.js"></script>
<script>
    function ResetAmount() {
        var txts = $('.txt-funds');
        var m = 0;
        $.each(txts, function (i, item) {
            if (item.value) {
                m += parseFloat(item.value);
            }
        });
        $('.funds-all').val(m);
    }
    function addChild() {
        var div = $('.out-form').get(0);
        if (div == null) {
            alert('添加出错');
        }
        var str = div.outerHTML;
        var newdiv = $(str);
        newdiv.find('#item_amount').val('');
        newdiv.find('#item_applyFor').val('');
        newdiv.insertBefore($('.div-user'));
    }
    function Add(obj) {
        var formdata = new Object();
        formdata.amount = $('#amount').val();
        formdata.number = $('#hidNumber').val();
        var divs = $('.out-form');
        var list = new Array();
        var len = divs.length;
        if (len == 0) {
            alert('没有填写任何申请单。');
            return;
        }
        for (var i = 0; i < len; i++) {
            var child = new Object();
            child.amount = $(divs[i]).find('#item_amount').val();
            if (!child.amount || child.amount == 0) {
                alert('金额不可为空！');
                return false;
            }
            child.applyFor = $(divs[i]).find('#item_applyFor').val();
            //$('.f-sel').val()
            child.Fid = $(divs[i]).find('.f-sel').val();
            if (!child.Fid || child.Fid == 0) {
                alert('请选择经费！');
                return false;
            }
            child.factGet = $(divs[i]).find('#item_factGet').val();
            child.getInfo = $(divs[i]).find('#item_getInfo').val();
            child.Cnumber = $(divs[i]).find('#item_Cnumber').val();
            list.push(child);
        }
        formdata.child = list;
        var cbks = $('.cbkuser');
        len = cbks.length;
        for (var i = 0; i < len; i++) {
            if (cbks[i].checked) {
                formdata.next = cbks[i].value;
                break;
            }
        }
        if (!formdata.next&&!$('#hidNoNext').val()) {
            alert('请选择下一步批复的领导！');
            return false;
        }
        //var $btn = $(obj).button('loading');
        $.post("../Edit", formdata, function (data, status) {
            if (data.state == '1') {
                location.href = '@Url.RouteUrl(new { action = "ApplyNext", controller = "ApplyManager"})?number='+data.msg_text;
            } else {
                if (data.msg_code == 'nologin') location.href = '@Url.RouteUrl(new { action = "LogOut", controller = "Login"})';
                $('#msg').removeClass();
                $('#msg').addClass('col-md-offset-2 col-md-10 alert alert alert-danger');
                $('#msg').text(data.msg_text);
                alert(data.msg_text);
            }
            $('#msg').slideDown("slow");
            //setTimeout(function () {
            //    $('#msg').slideToggle("slow");
            //}, 5000);
        });
    }
    function DeleteThis(obj) {
        var div = $(obj).parent().parent().parent();
        div.remove();
        ResetAmount();
    }
</script>