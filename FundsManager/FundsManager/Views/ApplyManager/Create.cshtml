@model FundsManager.ViewModels.ApplyEditModel

@{
    ViewBag.Title = FundsManager.Controllers.SiteInfo.getSiteName() + "经费申请";
}
<style>
    .out-form{width:100%;
                  background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    padding:15px 10px 0px 0px;
    margin-top:15px;
    }
</style>
<h4>经费申请</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.userId, new { Value = User.Identity.Name })

        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                <input type="button" onclick="addChild();" class="btn btn-info" value="添加经费" />
            </div>
        </div>
        @foreach (var item in Model.capply)
        {
            <div class="out-form">
                <div class="form-group">
                    @Html.LabelFor(model => item.Fid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => item.Fid, ViewBag.Funds as List<SelectListItem>, new { @class = "select form-control" })
                        @Html.ValidationMessageFor(model => item.Fid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => item.amount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.applyFor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => item.applyFor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => item.applyFor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }


        <div class="form-group" style="padding-top:15px;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="提 交" class="btn btn-success" />
                @Html.ActionLink("返 回", "Index", null, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>
}
<script src="~/scripts/jquery-3.2.1.min.js"></script>
<script>
    function addChild() {
        var div = $('.out-form').get(0);
        if (div == null) {
            alert('添加出错');
        }
        var str = $(div).html();
        $(str).insertAfter($(div));
    }
</script>