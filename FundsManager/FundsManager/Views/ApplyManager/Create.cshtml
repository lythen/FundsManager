@model FundsManager.ViewModels.ApplyEditModel

@{
    ViewBag.Title = FundsManager.Controllers.SiteInfo.getSiteName() + "经费申请";
}
<style>
    .out-form{width:100%;
                  background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    padding:15px 10px 0px 0px;
    margin-top:15px;
    }
    .funds-all{
        width:auto;
        min-width:250px;
        display:inline-block;
        height:36px;
    }
</style>
<h4>经费申请</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.userId, new { Value = User.Identity.Name })

        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control funds-all", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                <input type="button" onclick="addChild();" class="btn btn-info" value="添加经费" />
            </div>
        </div>
        @foreach (var item in Model.capply)
        {
            <div class="out-form">
                @Html.HiddenFor(model => item.Fid, new { Value = "0" })
                <div class="form-group">
                    @Html.LabelFor(model => item.Fid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => item.Fid, ViewBag.Funds as List<SelectListItem>, new { @class = "select form-control" })
                        @Html.ValidationMessageFor(model => item.Fid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => item.amount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.amount, new { htmlAttributes = new { @class = "form-control txt-funds",@type="number", onblur= "ResetAmount();" } })
                        @Html.ValidationMessageFor(model => item.amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.applyFor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => item.applyFor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => item.applyFor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" id="msg">
                @ViewBag.msg
            </div>
        </div>
        <div class="form-group btn-div" style="padding-top:15px;">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" id="fat-btn" onclick="Add(this);" data-loading-text="加载中..." class="btn btn-primary" autocomplete="off">
                    提 交
                </button>
                @Html.ActionLink("返 回", "Index", null, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>
}
<script src="~/scripts/jquery-3.2.1.min.js"></script>
<script>
    function ResetAmount() {
        var txts = $('.txt-funds');
        var m = 0;
        $.each(txts, function (i, item) {
            if (item.value) {
                m += parseInt(item.value);
            }
        });
        $('.funds-all').val(m);
    }
    function addChild() {
        var div = $('.out-form').get(0);
        if (div == null) {
            alert('添加出错');
        }
        var str = div.outerHTML;
        var newdiv = $(str);
        newdiv.find('#item_amount').val('');
        newdiv.find('#item_applyFor').val('');
        newdiv.insertBefore($('.btn-div'));
    }
    function Add() {
        var btn = $("#fat-btn");
        btn.button('loading');
        setTimeout(function () { btn.button('reset'); }, 2000);
    }
    function Add1(obj) {
        var formdata = new Object();
        formdata.amount = $('#amount').val();
        var divs = $('.out-form');
        var list = new Array();
        $.each(divs, function (i, item) {
            var child = new Object();
            child.amount = $(item).find('#item_amount').val();
            child.applyFor = $(item).find('#item_applyFor').val();
        });
        formdata.capply = list;
        var $btn = $(obj).button('loading');
        $.post("@Url.RouteUrl(new {controller= "ApplyManager", action= "Create" })", formdata, function (data, status) {
            if (data.state == '1') {
                $('#msg').removeClass();
                $('#msg').addClass('col-md-offset-2 col-md-10 alert alert-success');
                $('#msg').text(data.msg_text);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);

            } else {
                $('#msg').removeClass();
                $('#msg').addClass('col-md-offset-2 col-md-10 alert alert alert-danger');
                $('#msg').text(data.msg_text);
            }
            $('#msg').slideDown();
            setTimeout(function () {
                $('#msg').slideToggle();
            }, 5000);
        }).complete(function () {
            $btn.button('reset');
        });
    }
</script>